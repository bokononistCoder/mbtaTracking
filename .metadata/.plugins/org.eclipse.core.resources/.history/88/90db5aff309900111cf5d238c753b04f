import java.io.InputStream;

import org.xml.sax.Attributes;
import org.xml.sax.InputSource;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.XMLReaderFactory;


public class readXML extends DefaultHandler {
	
	private boolean bTrip=false;
	private boolean bPlatform=false;
	private boolean bInfoType=false;
	private boolean bTime=false;
	private boolean bTimeRem=false;
	
	
	readXML()
	{
		super();
	}
	
	readXML(InputStream input)
	{
		try
		{
			XMLReader xr = XMLReaderFactory.createXMLReader();
			readXML handler = new readXML();
			xr.setContentHandler(handler);
			xr.setErrorHandler(handler);
			InputSource is= new InputSource(input);
			xr.parse(is);
		}
		catch(Exception e)
		{	
			System.out.println("Error creating XMLReader");
		}
	}	
	
	
	public void startDocument()
	{
		System.out.println("Document Started");
	}
	
	public void endDocument()
	{
		System.out.println("Document Ended");
	}
	
    public void startElement (String uri, String name,
		      String qName, Attributes atts)
    {	
    	System.out.println("Start element: " + qName);
    	if(qName.equalsIgnoreCase("Trip"))
    		bTrip=true;
    	else if(qName.equalsIgnoreCase("PlatformKey"))
    		bPlatform=true;
    	else if(qName.equalsIgnoreCase("InformationType"))
    		bInfoType=true;
    	else if(qName.equalsIgnoreCase("Time"))
    		bTime=true;
    	else if(qName.equalsIgnoreCase("TimeRemaining"))
    		bTimeRem=true;

    	
    }

    public void endElement (String uri, String name, String qName)
    {
    	System.out.println("End element: " + qName );
    }

	public void characters(char ch[], int start, int length)
	{
		 
		if (bTrip)
		{
			System.out.println("Trip Number : " + new String(ch, start, length));
			bTrip = false;
		}
		else if (bPlatform)
		{
			System.out.println("Platform Key : " + new String(ch, start, length));
			bPlatform = false;
		}
		else if (bInfoType)
		{
			System.out.println("Info Type : " + new String(ch, start, length));
			bInfoType = false;
		}
		else if (bTime)
		{
			System.out.println("Time : " + new String(ch, start, length));
			bTime = false;
		}
		else if (bTimeRem)
		{
			System.out.println("Time Remaining : " + new String(ch, start, length));
			bTimeRem = false;
		}
	}
    
    
    
    
//    public void characters (char ch[], int start, int length)
//    {
//    	String c=new String(ch, start, length);
//    	if(c!=" "&&c!="\n"&&c!="\r"&&c!=""&&c!="\t"&&c!="")
//    		System.out.println("start characters : " + c);
//    }

    
    /*
    public void characters (char ch[], int start, int length)
    {
	System.out.print("Characters:    \"");
	for (int i = start; i < start + length; i++) {
	    switch (ch[i]) {
	    case '\\':
		System.out.print("\\\\");
		break;
	    case '"':
		System.out.print("\\\"");
		break;
	    case '\n':
		System.out.print("\\n");
		break;
	    case '\r':
		System.out.print("\\r");
		break;
	    case '\t':
		System.out.print("\\t");
		break;
	    default:
		System.out.print(ch[i]);
		break;
	    }
	}
	System.out.print("\"\n");
    }
    
    */
    
/*		
	    public void startDocument() throws SAXException {
	        System.out.println("start document   : ");
	    }

	    public void endDocument() throws SAXException {
	        System.out.println("end document     : ");
	    }

	    public void startElement(String uri, String localName,
	        String qName, Attributes attributes)
	    throws SAXException {

	        System.out.println("start element    : " + qName);
	    }

	    public void endElement(String uri, String localName, String qName)
	    throws SAXException {
	        System.out.println("end element      : " + qName);
	    }

	    public void characters(char ch[], int start, int length)
	    throws SAXException {
	        System.out.println("start characters : " +
	            new String(ch, start, length));
	    }

	}
	*/
	
}
